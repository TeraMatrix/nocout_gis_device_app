#!/usr/bin/python

def port_mode(st):
    names = { '1': 'notConnected',      '10': 'connectedHalfDuplex',
              '11': 'connectedFullDuplex', '15': 'connectedHalfDuplex',
              '16': 'connectedFullDuplex', '6556': 'unknown' }
    return names.get(st)

def port_speed(st):
    names = { '1': 'notConnected',      '10': '10Mbps',
              '11': '10Mbps', '15': '100Mbps',
              '16': '100Mbps', '6556': 'unknown' }
    return names.get(st)

def check_radwin_mode_speed_status(item,_no_params,info):
        try:
                if not info[0]:
                        return (3,"No response from device")
                port_status_list = []
		infotext = ""
		for index in range(len(info)):
			port_mode_value  = info[index][0]
			port_speed_value = port_speed(str(port_mode_value))
			if port_speed_value == None:
				port_speed_value = "unknown port speed"
			port_mode_string = port_mode(str(port_mode_value))
			if port_mode_string == None:
				port_mode_string = "unknown port mode"
			port_status_list.append((str(index+1),port_mode_string,port_speed_value))

                for index,status in port_status_list:
                        infotext += "[port %s] %s %s"% (str(index+1),port_mode_,port_speed_value)
                state = 0
        except ValueError:
                state = 0
                infotext = "interface status type mismatch"
                return (state,infotext,[''])
	except:
		state = 3
		infotext = "unknown value"
		return (state,infotext,[''])
        return (state,  infotext, port_status_list)


check_info["radwin_mode_speed_status"] = {
        'check_function'        :  check_radwin_mode_speed_status,
        'service_description'   :  'radwin_mode_speed_status',
        'has_perfdata'          :  True,
}

snmp_info["radwin_mode_speed_status"] = ( ".1.3.6.1.4.1.4458.1000.1.3.2.1", [ "7.1" ] )
                                                                                         

