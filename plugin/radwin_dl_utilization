#!/usr/bin/python

"""
Downlink utilizationPoller script.

This is part of device application. 
Poller script determines the port current Downlink utilization in terms of number of octets in downlink direction.
poller script takes the snmp value of OID .1.3.6.1.2.1.2.2.1.16 from snmp agent of device at specific interval.
Total Downlink utilization is sent to device application 

"""
########################################################################
# Function : check_radwin_dl_utilization
#
# Parameters: info (SNMP otuput ,_no_params (NO parameters))
#
# Output: service state,plugin output and performance data
########################################################################


def check_radwin_dl_utilization(item, _no_params, info):
	"""
                check_radwin_dl_utilization function calculates the downlink utilization

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
					3: unknown
                        infotext(string):
                                        plugin output
                                        Example : OK - [Management_Port_on_Odu] dl_utilization:2994339289

                        performance_data  (list):
                                        performance data
                                        Example: Management_Port_on_Odu=2994339289;;;; Radio_Interface=;;;;
                        Raises:
                                ValueError ,Exception
	"""

	try:
		if not info[0]:
			return (3,"No response from device")
		status_list = []
		infotext = ""
		for index in range(len(info)):
			link_out_octets  = info[index][1]
                        if_name = info[index][0]
                        if if_name == None:
                                if_name = "unknown interface name"
			if ' ' in if_name:
				if_name = str.replace(if_name,' ', '_')
			status_list.append((if_name,link_out_octets))
                state = 0
                for name,out_octets,in status_list:
                        infotext += "[%s] dl_utilization:%s" %(name,out_octets)
        except ValueError:
                state = 0
                infotext = "interface utilization type not correct"
                return (state,infotext,[''])
	except:
		state= 3
		infotext = "unknown value"
		return (state,infotext,[''])
        return (state,  infotext, status_list)

check_info["radwin_dl_utilization"] = {
    'check_function'        :  check_radwin_dl_utilization,
    'service_description'   :  'radwin_dl_utilization',
    'has_perfdata'          :  True,
}

##############################################################################
#SNMP OID for the Downlink utilization
##############################################################################


snmp_info["radwin_dl_utilization"] = ( ".1.3.6.1.2.1.2.2.1", [ "2" ,"16"] )
